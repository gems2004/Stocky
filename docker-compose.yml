services:
  database:
    image: postgres:15-alpine
    container_name: stocky-db
    restart: always
    environment:
      POSTGRES_USER: stocky
      POSTGRES_PASSWORD: stocky
      POSTGRES_DB: stocky
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U stocky"]
      interval: 10s
      timeout: 5s
      retries: 5

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: stocky-server
    restart: always
    environment:
      NODE_ENV: production
      DB_HOST: database
      DB_PORT: 5432
      DB_USERNAME: stocky
      DB_PASSWORD: stocky
      DB_NAME: stocky
      JWT_SECRET: your-jwt-secret-here
      PORT: 3000
    expose:
      - "3000"
    depends_on:
      database:
        condition: service_healthy

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: stocky-client
    restart: always
    environment:
      NEXT_PUBLIC_BACKEND_URL: /api
      NEXT_PUBLIC_ENV: production
    expose:
      - "3000"

  nginx:
    image: nginx:alpine
    container_name: stocky-nginx
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - server
      - client

volumes:
  postgres_data:
